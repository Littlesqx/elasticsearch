[[mapping-source-field]]
=== `_source` 字段

`_source` 字段包含在索引时传递的原始JSON文档正文。`_source` 字段本身没有索引（因此不可搜索），但它被存储，以便在执行 _fetch_ requests 时可以返回它，
如 <<docs-get,get>> 或 <<search-search,search>> 。

==== 禁用 `_source` 字段

虽然非常方便， `_source` 字段确实会在索引中产生存储开销。因此，可以按如下方式禁用它：

[source,js]
--------------------------------------------------
PUT tweets
{
  "mappings": {
    "_doc": {
      "_source": {
        "enabled": false
      }
    }
  }
}
--------------------------------------------------
// CONSOLE

[WARNING]
.禁用 `_source` 字段前考虑清楚
==================================================

用户经常在不考虑后果的情况下禁用 `_source` 字段，然后感到后悔。如果 `_source` 字段不可用，则不支持许多功能：

* <<docs-update,`update`>> 、 <<docs-update-by-query,`update_by_query`>> 、和 <<docs-reindex,`reindex`>> APIs。

* 即时生效的 <<search-request-highlighting,highlighting>> 。

* 能够从一个 Elasticsearch 索引重新索引到另一个索引，更改映射或分析，或将索引升级到新的主要版本。

* 通过查看索引时使用的原始文档来调试查询或聚合的功能。

* 将来可能会自动修复索引损坏的能力。

==================================================

提示：如果需要考虑磁盘空间，请增加 <<index-codec,压缩级别>> ，而不是禁用 `_source` 。

.metric 用例
**************************************************

_metrics_ 用例与其他基于时间或日志记录的用例不同，因为有许多小文档仅包含数字，日期或关键字。
没有更新，没有突出显示请求，数据快速老化，因此无需重新编制索引。搜索请求通常使用简单查询按日期或标记过滤数据集，结果将作为聚合返回。

在这种情况下，禁用 `_source` 字段将节省空间并减少 I/O。建议在 metrics 用例下禁用 <<mapping-all-field,`_all` 字段>>。

**************************************************


[[include-exclude]]
==== 包括/排除 `_source` 中的字段

仅限专家的功能是能够在索引文档之后但在存储 `_source` 字段之前修剪 `_source` 字段的内容。

WARNING: Removing fields from the `_source` has similar downsides to disabling
`_source`, especially the fact that you cannot reindex documents from one
Elasticsearch index to another. Consider using
<<search-request-source-filtering,source filtering>> instead.

警告：从 `_source` 中删除字段与禁用 `_source` 有类似的缺点，尤其是无法将文档从一个 Elasticsearch 索引重新索引到另一个 Elasticsearch 索引。
请考虑使用 <<search-request-source-filtering,source filtering>> 。

`includes`/`excludes` 参数（也接受通配符） (which also accept wildcards) 可以如下使用：

[source,js]
--------------------------------------------------
PUT logs
{
  "mappings": {
    "_doc": {
      "_source": {
        "includes": [
          "*.count",
          "meta.*"
        ],
        "excludes": [
          "meta.description",
          "meta.other.*"
        ]
      }
    }
  }
}

PUT logs/_doc/1
{
  "requests": {
    "count": 10,
    "foo": "bar" <1>
  },
  "meta": {
    "name": "Some metric",
    "description": "Some metric description", <1>
    "other": {
      "foo": "one", <1>
      "baz": "two" <1>
    }
  }
}

GET logs/_search
{
  "query": {
    "match": {
      "meta.other.foo": "one" <2>
    }
  }
}
--------------------------------------------------
// CONSOLE

<1> 这些字段将从存储的 `_source` 字段中删除。
<2> 我们仍然可以搜索这个字段，即使它不在存储的 `_source` 中。
