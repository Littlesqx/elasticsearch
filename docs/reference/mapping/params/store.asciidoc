[[mapping-store]]
=== `store`

默认情况下，字段值会被<<mapping-index,索引>>以使其可搜索，但它们不是_stored_。这意味着可以查询该字段，但无法检索原始字段值。

通常这无关紧要。字段值已经是 <<mapping-source-field，`_source` 字段>>的一部分，默认会被存储。
你如果只想检索单个字段或几个字段的值，而不是整个 `_source` ，那么可以使用 <<search-request-source-filtering,source filtering>> 来实现。

在某些情况下， `store` 字段是有意义的。例如，你如果有一个带有 `title` 、 `date` 和非常大的 `content` 字段的文档，可能想要只检索 `title` 和 `date` 而不必从大的 `_source` 字段中提取其它字段：

[source,js]
--------------------------------------------------
PUT my_index
{
  "mappings": {
    "_doc": {
      "properties": {
        "title": {
          "type": "text",
          "store": true <1>
        },
        "date": {
          "type": "date",
          "store": true <1>
        },
        "content": {
          "type": "text"
        }
      }
    }
  }
}

PUT my_index/_doc/1
{
  "title":   "Some short title",
  "date":    "2015-01-01",
  "content": "A very long content field..."
}

GET my_index/_search
{
  "stored_fields": [ "title", "date" ] <2>
}
--------------------------------------------------
// CONSOLE
<1> `title` 和 `date` 字段被存储。
<2> 该请求将检索 `title` 和 `date` 字段的值。

[NOTE]
.存储的字段作为数组返回
======================================

为保持一致性，存储的字段始终作为 _array_ 返回，因为无法知道原始字段值是单个值、多个值还是空数组。

你如果需要原始值，则应该从 `_source` 字段中检索它。

======================================

存储字段另一种有意义的情况是那些没有出现在 `_source` 字段中的字段（例如 <<copy-to,`copy_to` 字段>>）。