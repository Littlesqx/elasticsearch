[[search-analyzer]]
=== `search_analyzer`

通常，应在索引和搜索时使用相同的 <<analyzer,analyzer>> ，以确保查询中的词项（term）与反向索引中的词项（term）具有相同的格式。

但有时候，在搜索时使用不同的分析器是有意义的，例如当使用c<<analysis-edgengram-tokenizer,`edge_ngram`>> tokenizerc 进行自动完成（autocomplete）。

默认情况下，查询将使用字段映射中定义的 `analyzer` ，但也可以使用 `search_analyzer` 设置来覆盖它：

[source,js]
--------------------------------------------------
PUT my_index
{
  "settings": {
    "analysis": {
      "filter": {
        "autocomplete_filter": {
          "type": "edge_ngram",
          "min_gram": 1,
          "max_gram": 20
        }
      },
      "analyzer": {
        "autocomplete": { <1>
          "type": "custom",
          "tokenizer": "standard",
          "filter": [
            "lowercase",
            "autocomplete_filter"
          ]
        }
      }
    }
  },
  "mappings": {
    "_doc": {
      "properties": {
        "text": {
          "type": "text",
          "analyzer": "autocomplete", <2>
          "search_analyzer": "standard" <2>
        }
      }
    }
  }
}

PUT my_index/_doc/1
{
  "text": "Quick Brown Fox" <3>
}

GET my_index/_search
{
  "query": {
    "match": {
      "text": {
        "query": "Quick Br", <4>
        "operator": "and"
      }
    }
  }
}

--------------------------------------------------
// CONSOLE

<1> 分析设置以定自定义 `autocomplete` 分析器。
<2> `text` 字段在索引时使用 `autocomplete` 分析器，但在搜索时使用 `standard` 分析器。
<3> 该字段被索引为词条：[`q`,`qu`,`qui`,`quic`,`quick`,`b`,`br`,`bro`,`brow`,`brown`,` f`,`fo`,`fox`]
<4> 查询搜索这两个词条：[`quick`,`br`]

参见 {defguide}/_index_time_search_as_you_type.html[Index time search-as-you-
type] 以查看该例的详细解释。

TIP: 可以使用 <<indices-put-mapping,PUT mapping API>> 在现有字段上更新 `search_analyzer` 设置。
