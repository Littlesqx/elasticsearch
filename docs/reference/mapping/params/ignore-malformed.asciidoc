[[ignore-malformed]]
=== `ignore_malformed`

有时你无法控制所收到的数据。一个用户可以发送 `login` 字段，该字段是 <<date,`date`>> ，另一个用户发送 `login` 字段，该字段是电子邮件地址。

尝试将错误的数据类型索引到字段中默认情况下会抛出异常，并拒绝整个文档。 `ignore_malformed` 参数，如果设置为 `true` ，则允许忽略该异常。格式错误的字段未编入索引，但文档中的其他字段正常处理。

例如：

[source,js]
--------------------------------------------------
PUT my_index
{
  "mappings": {
    "_doc": {
      "properties": {
        "number_one": {
          "type": "integer",
          "ignore_malformed": true
        },
        "number_two": {
          "type": "integer"
        }
      }
    }
  }
}

PUT my_index/_doc/1
{
  "text":       "Some text value",
  "number_one": "foo" <1>
}

PUT my_index/_doc/2
{
  "text":       "Some text value",
  "number_two": "foo" <2>
}
--------------------------------------------------
// CONSOLE
// TEST[catch:bad_request]
<1> 该文档索引了 `text` 字段，而没有索引 `number_two` 字段。
<2> 该文档会被拒绝，因为 `number_two` 字段不允许格式错误的值。

提示：允许 `ignore_malformed` 设置对同一索引中同名字段的设置不同。 可以使用 <<indices-put-mapping,PUT mapping API>> 在现有字段上更新其值。


[[ignore-malformed-setting]]
==== Index-level 的默认值

可以在索引级别设置 `index.mapping.ignore_malformed` 设置，以允许在所有映射类型中全局忽略格式错误的内容。

[source,js]
--------------------------------------------------
PUT my_index
{
  "settings": {
    "index.mapping.ignore_malformed": true <1>
  },
  "mappings": {
    "_doc": {
      "properties": {
        "number_one": { <1>
          "type": "byte"
        },
        "number_two": {
          "type": "integer",
          "ignore_malformed": false <2>
        }
      }
    }
  }
}
--------------------------------------------------
// CONSOLE

<1> `number_one` 字段继承索引级设置。
<2> `number_two` 字段覆盖索引级别设置以关闭 `ignore_malformed` 。

==== 处理格式错误的字段

当 `ignore_malformed` 打开时，在索引时默认忽略格式错误的字段。建议尽可能保留包含格式错误字段的文档数量，否则对该字段的查询将变得毫无意义。
通过在特殊的 <<mapping-ignored-field,`_ignored`>> 字段上使用 `exist` 或 `term` 查询， Elasticsearch 可以轻松检查有多少文档有错误字段。

