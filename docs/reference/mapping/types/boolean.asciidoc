[[boolean]]
=== 布尔数据类型

布尔字段接受 JSON `true` 或 `false` 值，但也可以接受被解释为 `true` 或 `false` 的字符串：

[horizontal]
False 值::

    `false`, `"false"`

True 值::

    `true`, `"true"`

例如：

[source,js]
--------------------------------------------------
PUT my_index
{
  "mappings": {
    "_doc": {
      "properties": {
        "is_published": {
          "type": "boolean"
        }
      }
    }
  }
}

POST my_index/_doc/1
{
  "is_published": "true" <1>
}

GET my_index/_search
{
  "query": {
    "term": {
      "is_published": true <2>
    }
  }
}
--------------------------------------------------
// CONSOLE
<1> 以 `"with"` 索引一个文档，会被解释为 `true` 。
<2> 以 JSON `true` 搜索文档。

聚合例如 <<search-aggregations-bucket-terms-aggregation,`terms`
aggregation>> 使用 `1` 和 `0` 作为 `key`，而字符串 `"true"` 和 `"false"` 作为 `key_as_string` 。
在脚本中使用布尔字段，返回 `1` 和 `0` ：

[source,js]
--------------------------------------------------
POST my_index/_doc/1
{
  "is_published": true
}

POST my_index/_doc/2
{
  "is_published": false
}

GET my_index/_search
{
  "aggs": {
    "publish_state": {
      "terms": {
        "field": "is_published"
      }
    }
  },
  "script_fields": {
    "is_published": {
      "script": {
        "lang": "painless",
        "source": "doc['is_published'].value"
      }
    }
  }
}
--------------------------------------------------
// CONSOLE

[[boolean-params]]
==== 布尔值的参数

布尔字段接受以下参数：

[horizontal]

<<mapping-boost,`boost`>>::

    映射字段级别查询时间提升。接受一个浮点数，默认为 `1.0` 。

<<doc-values,`doc_values`>>::

    字段是否应该以多列的方式存储在磁盘上，以便以后可以将其用于排序，聚合或脚本？接受 `true` （默认）或 `false` 。

<<mapping-index,`index`>>::

    字段是否可搜索？接受 `true` （默认）或 `false` 。

<<null-value,`null_value`>>::

    接受上面列出的任何真值或假值。该值被替换为任何显式空值。默认为 `null` ，意味着该字段被视为缺失。

<<mapping-store,`store`>>::

    字段值是否应与 <<mapping-source-field,`_source`>> 字段分开存储和检索。接受 `true` 或 `false` （默认）。

