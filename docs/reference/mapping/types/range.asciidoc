[[range]]
=== 范围数据类型

支持以下的范围类型（range type）：

[horizontal]
`integer_range`::   32 位有符号整型数范围。最小值是 +-2^31^+ ，最大值是 +2^31^-1+ 。
`float_range`::     32 位单精度 IEEE 754 浮点数范围。
`long_range`::      64 位有符号整型数范围。最小值是 +-2^63^+ ，最大值是 +2^63^-1+ 。
`double_range`::    64 位双精度 IEEE 754 浮点数范围。
`date_range`::      以系统纪元经过的 64 位无符号整型数毫秒表示的日期值范围。
`ip_range` ::       https://en.wikipedia.org/wiki/IPv4[IPv4] 地址 或
                    https://en.wikipedia.org/wiki/IPv6[IPv6] 地址（或混合）表示的 ip 地址范围。

下面是一个使用各种范围字段配置映射的示例，后跟一个索引多个范围类型的示例。

[source,js]
--------------------------------------------------
PUT range_index
{
  "settings": {
    "number_of_shards": 2
  },
  "mappings": {
    "_doc": {
      "properties": {
        "expected_attendees": {
          "type": "integer_range"
        },
        "time_frame": {
          "type": "date_range", <1>
          "format": "yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis"
        }
      }
    }
  }
}

PUT range_index/_doc/1?refresh
{
  "expected_attendees" : { <2>
    "gte" : 10,
    "lte" : 20
  },
  "time_frame" : { <3>
    "gte" : "2015-10-31 12:00:00", <4>
    "lte" : "2015-11-01"
  }
}
--------------------------------------------------
//CONSOLE
// TESTSETUP

<1> `date_range` 类型接受由 <<date, `date`>> 类型定义的相同字段参数。
<2> 例子索引了一个有 10 到 20 个与会者的会议。
<3> 日期范围接受与<<ranges-on-dates, 日期范围查询>>中所述相同的格式。
<4> 日期范围使用时间戳的例子。这也接受<<date-math, 日期数学>>格式, 或者系统时间的 "now"。

以下是名为 "expected_attendees" 的 `integer_range` 字段中的<<query-dsl-term-query, 词条查询（term query）>>的示例。

[source,js]
--------------------------------------------------
GET range_index/_search
{
  "query" : {
    "term" : {
      "expected_attendees" : {
        "value": 12
      }
    }
  }
}
--------------------------------------------------
// CONSOLE

上述查询产生的结果：

[source,js]
--------------------------------------------------
{
  "took": 13,
  "timed_out": false,
  "_shards" : {
    "total": 2,
    "successful": 2,
    "skipped" : 0,
    "failed": 0
  },
  "hits" : {
    "total" : 1,
    "max_score" : 1.0,
    "hits" : [
      {
        "_index" : "range_index",
        "_type" : "_doc",
        "_id" : "1",
        "_score" : 1.0,
        "_source" : {
          "expected_attendees" : {
            "gte" : 10, "lte" : 20
          },
          "time_frame" : {
            "gte" : "2015-10-31 12:00:00", "lte" : "2015-11-01"
          }
        }
      }
    ]
  }
}
--------------------------------------------------
// TESTRESPONSE[s/"took": 13/"took" : $body.took/]

下面是一个在名为 time_frame 的日期范围字段上的 `date_range` 查询例子。

[source,js]
--------------------------------------------------
GET range_index/_search
{
  "query" : {
    "range" : {
      "time_frame" : { <1>
        "gte" : "2015-10-31",
        "lte" : "2015-11-01",
        "relation" : "within" <2>
      }
    }
  }
}
--------------------------------------------------
// CONSOLE

<1> 范围查询的工作与<<query-dsl-range-query, 范围查询>>中所述相同。
<2> 基于范围字段的范围查支持一个 `relation` 参数，可以是 `WITHIN` 、 `CONTAINS` 、
    `INTERSECTS` （默认）之一。

上述查询产生的结果：

[source,js]
--------------------------------------------------
{
  "took": 13,
  "timed_out": false,
  "_shards" : {
    "total": 2,
    "successful": 2,
    "skipped" : 0,
    "failed": 0
  },
  "hits" : {
    "total" : 1,
    "max_score" : 1.0,
    "hits" : [
      {
        "_index" : "range_index",
        "_type" : "_doc",
        "_id" : "1",
        "_score" : 1.0,
        "_source" : {
          "expected_attendees" : {
            "gte" : 10, "lte" : 20
          },
          "time_frame" : {
            "gte" : "2015-10-31 12:00:00", "lte" : "2015-11-01"
          }
        }
      }
    ]
  }
}
--------------------------------------------------
// TESTRESPONSE[s/"took": 13/"took" : $body.took/]

[[ip-range]]
==== IP Range

除上述范围格式外，还可以使用 https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation[CIDR] 表示法提供 IP 范围：

[source,js]
--------------------------------------------------
PUT range_index/_mapping/_doc
{
  "properties": {
    "ip_whitelist": {
      "type": "ip_range"
    }
  }
}

PUT range_index/_doc/2
{
  "ip_whitelist" : "192.168.0.0/16"
}
--------------------------------------------------
// CONSOLE

[[range-params]]
==== 范围字段的参数

范围字段接受以下参数：

[horizontal]

<<coerce,`coerce`>>::

    尝试将字符串转换为数字并截断整数的分数。接受 `true` （默认）和 `false` 。

<<mapping-boost,`boost`>>::

    映射字段级查询时间提升。接受一个浮点数，默认为 `1.0` 。

<<mapping-index,`index`>>::

    字段是否可搜索？接受 `true` （默认）或 `false` 。

<<mapping-store,`store`>>::

    字段值是否应与 <<mapping-source-field,`_source`>> 字段分开存储和检索。接受 `true` 或 `false` （默认）。

