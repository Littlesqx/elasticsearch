[[keyword]]
=== 关键字数据类型

关键字字段（Keyword field）是用于索引结构内容的字段，例如邮箱地址、主机名、状态码、邮编编码和标签。

它们通常用于过滤（ __查找所有 ++status++ 为 ++published++ 的博客文章__ ），搜索和聚合。关键字字段只能根据其确切的值进行搜索。

你如果需要索引全文内容，例如邮箱内容或产品描述，那可能更应该使用 <<text,`text`>> 字段。

下面是关键字字段的一个映射例子：

[source,js]
--------------------------------
PUT my_index
{
  "mappings": {
    "_doc": {
      "properties": {
        "tags": {
          "type":  "keyword"
        }
      }
    }
  }
}
--------------------------------
// CONSOLE

[[keyword-params]]
==== 关键字字段的参数

关键字字段接受下面的参数：

[horizontal]

<<mapping-boost,`boost`>>::

    映射字段级别查询时间提升。接受一个浮点数，默认为 `1.0` 。

<<doc-values,`doc_values`>>::

    字段是否应该以多列的方式存储在磁盘上，以便以后可以将其用于排序，聚合或脚本？接受 `true` （默认）或 `false` 。

<<eager-global-ordinals,`eager_global_ordinals`>>::

    全局序数词是否被重启时预加载？接受 `true` 或 `false` （默认）。
    对于经常使用术语字段聚合的字段，启用它是一个好主意。

<<multi-fields,`fields`>>::

    多字段允许为不同目的以多种方式索引相同的字符串值，例如用于搜索的一个字段和用于排序和聚合的多字段。
    
<<ignore-above,`ignore_above`>>::

    不要索引比该值更长的字符串。默认值 `2147483647` ，以便所有值都被接受。
    但请注意，默认动态映射规则创建一个子 `keyword` 字段，通过设置 `ignore_above：256` 来覆盖此默认值。

<<mapping-index,`index`>>::

    字段是否可搜索？接受 `true` （默认）或 `false` 。

<<index-options,`index_options`>>::

    出于评分目的，应将哪些信息存储在索引中。 默认为 `docs` ，但也可以设置为 `freqs` ，以便在计算分数时考虑术语频率。

<<norms,`norms`>>::

    在对查询进行评分时是否应考虑字段长度。
    接受 `true` 或 `false` （默认）。

<<null-value,`null_value`>>::

    接受一个替换显式 `null` 值的字符串值。默认是 `null` ，意味着该字段被视为缺失。

<<mapping-store,`store`>>::

    字段值是否应与 <<mapping-source-field,`_source`>> 字段分开存储和检索。接受 `true` 或 `false` （默认）。

<<similarity,`similarity`>>::

    哪一个排序算法或 _similarity_ 被使用。默认是 `BM25` 。

<<normalizer,`normalizer`>>::

    如何在索引之前预处理关键字。默认是 `null` ，意味着关键字维持原样。

`split_queries_on_whitespace`::

    在构建此字段的查询时，<<full-text-queries,全文查询>>是否应拆分在空白上的输入。接受 `true` 或 `false` （默认）。

NOTE: 从 2.x 导入的索引不支持 `keyword` 。相反，它们会尝试将 `keyword` 降级为 `string` ，
这允许你将新映射和历史映射合并。升级到 6.x 之前，常驻索引（Long lived indexes）必须重建，
但映射降级提供了按照自己的计划重建的机会。
