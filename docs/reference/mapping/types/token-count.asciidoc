[[token-count]]
=== 词元数（token count）数据类型

`token_count` 字段类型实际上是一个 <<number,`integer`>> 字段，它接受字符串值并分析，然后索引当中的词元（token）数目。

例如：

[source,js]
--------------------------------------------------
PUT my_index
{
  "mappings": {
    "_doc": {
      "properties": {
        "name": { <1>
          "type": "text",
          "fields": {
            "length": { <2>
              "type":     "token_count",
              "analyzer": "standard"
            }
          }
        }
      }
    }
  }
}

PUT my_index/_doc/1
{ "name": "John Smith" }

PUT my_index/_doc/2
{ "name": "Rachel Alice Williams" }

GET my_index/_search
{
  "query": {
    "term": {
      "name.length": 3 <3>
    }
  }
}
--------------------------------------------------
// CONSOLE
<1> `name` 字段是一个被分析的字符串字段，它使用了默认的 `standard` 分析器。
<2> `name.length` 字段是一个 `token_count` <<multi-fields,multi-field>>，它会索引 `name` 字段中的词元（token）数量。
<3> 这个查询仅匹配包含 `Rachel Alice Williams` 的文档，因为只有它包含了三个词元（token）。


[[token-count-params]]
==== `token_count` 字段的参数

`token_count` 字段接受以下参数：

[horizontal]

<<analyzer,`analyzer`>>::

    应该被用于分析字符串值的<<analysis,分析器>>。必须。为了获得最佳性能，请使用不带词元过滤器（token analyzer）的分析器。

`enable_position_increments`:: 

如果计算废纸增量，请标明。
默认是 `true` 。如果你不想计算被分析器的过滤器（例如 <<analysis-stop-tokenfilter,`stop`>> ）移除的词元（token），请设为 `false` 。

<<mapping-boost,`boost`>>::

    映射字段级查询时间提升。接受一个浮点数，默认为 `1.0` 。

<<doc-values,`doc_values`>>::

    字段是否应该以多列的方式存储在磁盘上，以便以后可以将其用于排序，聚合或脚本？接受 `true` 或 `false` （默认）。

<<mapping-index,`index`>>::

    字段是否可搜索？接受 `not_analyzed` （默认）或 `no` 。

<<null-value,`null_value`>>::

    接受一个与该字段相同类型的数值替换显式 `null` 值。默认是 `null` ，意味着该字段被视为缺失。

<<mapping-store,`store`>>::

    字段值是否应与 <<mapping-source-field,`_source`>> 字段分开存储和检索。接受 `true` 或 `false` （默认）。

